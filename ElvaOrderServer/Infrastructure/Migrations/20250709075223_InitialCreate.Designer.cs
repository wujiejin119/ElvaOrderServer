// <auto-generated />
using System;
using ElvaOrderServer.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElvaOrderServer.Infrastructure.Migrations
{
    [DbContext(typeof(OrdersDbContext))]
    [Migration("20250709075223_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElvaOrderServer.Domain.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ExternalOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExternalOrderId")
                        .IsUnique();

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1000000001L,
                            CreatedAt = new DateTime(2025, 7, 9, 7, 52, 16, 668, DateTimeKind.Utc).AddTicks(9691),
                            CustomerId = 3000000001L,
                            ExternalOrderId = new Guid("a3e8f1b2-4c6d-4e5f-9a0b-1c2d3e4f5a6b"),
                            OrderId = 2000000001L
                        },
                        new
                        {
                            Id = 1000000002L,
                            CreatedAt = new DateTime(2025, 7, 9, 7, 52, 16, 668, DateTimeKind.Utc).AddTicks(9698),
                            CustomerId = 3000000002L,
                            ExternalOrderId = new Guid("7d8e9f0a-1b2c-3d4e-5f6a-7b8c9d0e1f2a"),
                            OrderId = 2000000002L
                        });
                });

            modelBuilder.Entity("ElvaOrderServer.Domain.Entities.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 5000000001L,
                            OrderId = 1000000001L,
                            ProductId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            Quantity = 2m
                        },
                        new
                        {
                            Id = 5000000002L,
                            OrderId = 1000000001L,
                            ProductId = new Guid("550e8400-e29b-41d4-a716-446655440000"),
                            Quantity = 1m
                        },
                        new
                        {
                            Id = 5000000003L,
                            OrderId = 1000000002L,
                            ProductId = new Guid("550e8400-e29b-41d4-a716-446655440000"),
                            Quantity = 3m
                        });
                });

            modelBuilder.Entity("ElvaOrderServer.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("ElvaOrderServer.Domain.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ElvaOrderServer.Domain.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
